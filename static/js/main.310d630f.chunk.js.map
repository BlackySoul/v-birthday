{"version":3,"sources":["components/LightsOut/LightsOut.jsx","components/WishCard/WishCard.jsx","App.js","reportWebVitals.js","index.js"],"names":["BoardCell","cell","cellIndex","rowIndex","handleClick","className","onClick","BoardRow","row","map","it","index","LightsOut","useState","board","setBoard","modalIsOpen","setModalIsOpen","toggleCellState","boardProp","length","createBoard","useCallback","newBoard","atLeastOneLightOn","j","i","lightOn","Math","round","random","console","log","every","c","useEffect","type","overlayClassName","isOpen","onRequestClose","shouldCloseOnOverlayClick","id","name","disabled","value","WishCard","children","task","buttonTitle","buttonClicked","setButtonClicked","e","val","App","style","padding","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Modal","setAppElement","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.310d630f.chunk.js","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport Modal from 'react-modal';\r\nimport './LightsOut.css';\r\n\r\nconst BoardCell = ({cell, cellIndex, rowIndex, handleClick}) => <div className=\"board-cell\"><div className={`board-cell-light${cell ? '' : ' off'}`} onClick={() => handleClick(rowIndex, cellIndex)}>X</div></div>\r\n\r\nconst BoardRow = ({row, rowIndex, handleClick}) => <div className=\"board-row\">{row.map((it, index) => <BoardCell key={index} cell={it} rowIndex={rowIndex} cellIndex={index} handleClick={handleClick} />)}</div>;\r\n\r\nconst LightsOut = () => {\r\n    const [board, setBoard] = useState([[false, false, false], [false, false, false], [false, false, false]]);\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n    const toggleCellState = (boardProp, cellIndex, rowIndex) => {\r\n        boardProp[cellIndex][rowIndex] = !boardProp[cellIndex][rowIndex];\r\n        \r\n        if (cellIndex > 0) { \r\n            boardProp[cellIndex-1][rowIndex] = !boardProp[cellIndex-1][rowIndex]; \r\n        }\r\n        if (cellIndex < boardProp.length-1) { \r\n            boardProp[cellIndex+1][rowIndex] = !boardProp[cellIndex+1][rowIndex]; \r\n        }\r\n        if (rowIndex > 0) { \r\n            boardProp[cellIndex][rowIndex-1] = !boardProp[cellIndex][rowIndex-1]; \r\n        }\r\n        if (rowIndex < boardProp[0].length-1) { \r\n            boardProp[cellIndex][rowIndex+1] = !boardProp[cellIndex][rowIndex+1];\r\n        }\r\n    };\r\n\r\n    const createBoard = useCallback(() => {\r\n\r\n        let newBoard = [[false, false, false], [false, false, false], [false, false, false]];\r\n\r\n        let atLeastOneLightOn = false;\r\n\r\n        for (let j=0; j<3; j++) {\r\n\r\n            for (let i=0; i<3; i++) {\r\n\r\n                let lightOn = Math.round(Math.random()) === 1 ? true : false;\r\n\r\n                if (!atLeastOneLightOn && lightOn) {\r\n                    atLeastOneLightOn = true;\r\n                } \r\n\r\n                if(lightOn) {\r\n                    // console.log(j, i);\r\n                    toggleCellState(newBoard, j, i);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!atLeastOneLightOn) { \r\n            createBoard() \r\n        } else {\r\n            setBoard(newBoard) \r\n        }\r\n    }, [])\r\n\r\n    const handleClick = (cellIndex, rowIndex) => {\r\n        console.log(cellIndex, rowIndex);\r\n        const newBoard = [...board];\r\n        toggleCellState(newBoard, cellIndex, rowIndex);\r\n        if(newBoard.every(it => it.every(c => !c))) {\r\n            setModalIsOpen(true)\r\n        };\r\n        setBoard(newBoard);\r\n    }\r\n\r\n    useEffect(() => {\r\n        createBoard();\r\n    }, [createBoard]);\r\n\r\n    return (        \r\n        <>\r\n            <div className=\"board\">{board.map((it, index) => <BoardRow key={index} row={it} rowIndex={index} handleClick={handleClick} />)}</div>\r\n            <button type=\"button\" onClick={createBoard} className=\"wish-card__button\">Сгенерировать ещё</button>\r\n            <Modal className=\"modal\" overlayClassName=\"modal-overlay\" isOpen={modalIsOpen} onRequestClose={() => setModalIsOpen(false)} shouldCloseOnOverlayClick>\r\n                <div className=\"form-group\">\r\n                  <label className=\"form-label\">\r\n                    Секретное сообщение\r\n                  </label>\r\n                  <div className=\"form-control\">\r\n                    <textarea\r\n                      id=\"message\"\r\n                      className=\"form-control\"\r\n                      name=\"message\"\r\n                      disabled\r\n                      value=\"Ожидание...&#13;&#10;Проверка ключей шифрования...&#13;&#10;Расшировка сообщения...&#13;&#10;...&#13;&#10;...&#13;&#10;Молодец! &#13;&#10;Выключил все лампочки.&#13;&#10;В обход Алисы...&#13;&#10;Теперь в комнате темно и уютно.&#13;&#10;Твоя награда - депривация сна! :p\"\r\n                    ></textarea>\r\n                  </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n        )\r\n};\r\n\r\nexport default LightsOut;","import { useState } from 'react';\r\nimport './WishCard.css';\r\n\r\nconst WishCard = ({ children, task, buttonTitle }) => {\r\n    const [buttonClicked, setButtonClicked] = useState(false);\r\n\r\n    const handleButtonClick = e => {\r\n        setButtonClicked(val => !val);\r\n    };\r\n\r\n    return (<>    \r\n    <div className={`wish-card ${buttonClicked ? 'flipped' : ''}`}><div className=\"wish-card-inner\">\r\n        <div className=\"wish-card__side wish-card__front\">\r\n            <p className=\"wish-card__task\">{task}</p>\r\n            <button type=\"button\" onClick={handleButtonClick} className=\"wish-card__button\">{buttonTitle}</button>\r\n        </div> \r\n        <div className=\"wish-card__side wish-card__back\">{children}</div>\r\n    </div></div></>)\r\n};\r\n\r\nexport default WishCard;","import './App.css';\nimport { LightsOut, WishCard } from './components';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"cybr-wrapper\"><p className=\"cybr-btn\">Happy Birthday!\n        <span>_</span>\n        <span className=\"cybr-btn__glitch\">Happy Birthdev!_</span>\n        <span className=\"cybr-btn__tag\">rA9</span>\n        </p></div>\n      </header>\n      <main className=\"main\">\n        <section>\n          <WishCard task=\"Для получения награды этой карточки ничего специально делать не нужно.\" buttonTitle=\"Получить\">\n            <div className=\"warzone-img\" />\n            <div className=\"warzone-img-overlay\">Здесь в идеале должен был быть ключик от Battle Pass. <br /><br />Но CoD - помойка, Battle.net - помойка, Blizzard - помойка, PSN - помойка. <br /><br />Жизнь - боль.</div>\n          </WishCard>\n        </section>\n        <section>\n          <WishCard task=\"Чтобы получить награду в этой карточке придется немного потрудиться и выполнить задание.&#13;&#10;Цель - погасить все лампочки.\" buttonTitle=\"Приступить\">\n            <LightsOut />\n          </WishCard>\n        </section>\n        <section>\n        <WishCard task=\"Это карточка со стандартными поздравлениями. Можно её даже не открывать.\" buttonTitle=\"Открыть все равно\">\n            <div style={{  padding: '20px', fontSize: '15px'}}>#include('standart-сongrats')<br/>#include('nonstandart-сongrats')<br/><br/>printAllCongrats();<br/><br/>А ничего и не вывелось,<br/> потому что плюсовым импортам не место в вебе,<br/> но там правда были самые-самые нарядные поздравления.<br/> Теперь ты на один день ближе к смерти ^_^<br/> (как и в любой другой день)</div>\n          </WishCard>\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nModal.setAppElement('#root');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}